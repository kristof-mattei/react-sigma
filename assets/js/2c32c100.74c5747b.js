"use strict";(self.webpackChunk_react_sigma_website=self.webpackChunk_react_sigma_website||[]).push([[577],{876:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return k}});var a=n(2784);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(n),k=r,u=c["".concat(s,".").concat(k)]||c[k]||m[k]||i;return n?a.createElement(u,o(o({ref:t},d),{},{components:n})):a.createElement(u,o({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4176:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},assets:function(){return d},toc:function(){return m},default:function(){return k}});var a=n(7896),r=n(1461),i=(n(2784),n(876)),o=["components"],l={id:"index",title:"@react-sigma/core",slug:"/api/core/",sidebar_label:"core",sidebar_position:.5,custom_edit_url:null},s=void 0,p={unversionedId:"api/core/index",id:"api/core/index",title:"@react-sigma/core",description:"Main React Sigma module that contains all the standard components & hooks  to display a graph in react.",source:"@site/docs/api/core/index.md",sourceDirName:"api/core",slug:"/api/core/",permalink:"/react-sigma/docs/api/core/",editUrl:null,tags:[],version:"current",sidebarPosition:.5,frontMatter:{id:"index",title:"@react-sigma/core",slug:"/api/core/",sidebar_label:"core",sidebar_position:.5,custom_edit_url:null},sidebar:"docs",previous:{title:"Project structure",permalink:"/react-sigma/docs/api"},next:{title:"ControlsContainerProps",permalink:"/react-sigma/docs/api/core/interfaces/ControlsContainerProps"}},d={},m=[{value:"Interfaces",id:"interfaces",level:2},{value:"Component Variables",id:"component-variables",level:2},{value:"Hook Functions",id:"hook-functions",level:2},{value:"Type aliases",id:"type-aliases",level:2},{value:"MouseEdgeEvent",id:"mouseedgeevent",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"MouseNodeEvent",id:"mousenodeevent",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"WheelEdgeEvent",id:"wheeledgeevent",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"WheelNodeEvent",id:"wheelnodeevent",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"Component Variables",id:"component-variables-1",level:2},{value:"ControlsContainer",id:"controlscontainer",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"FullScreenControl",id:"fullscreencontrol",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"SearchControl",id:"searchcontrol",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"SigmaContainer",id:"sigmacontainer",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"ZoomControl",id:"zoomcontrol",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"Hook Functions",id:"hook-functions-1",level:2},{value:"useCamera",id:"usecamera",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"useFullScreen",id:"usefullscreen",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"useLoadGraph",id:"useloadgraph",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns-3",level:5},{value:"Defined in",id:"defined-in-11",level:4},{value:"useRegisterEvents",id:"useregisterevents",level:3},{value:"Returns",id:"returns-4",level:4},{value:"Parameters",id:"parameters-2",level:5},{value:"Returns",id:"returns-5",level:5},{value:"Defined in",id:"defined-in-12",level:4},{value:"useSetSettings",id:"usesetsettings",level:3},{value:"Returns",id:"returns-6",level:4},{value:"Parameters",id:"parameters-3",level:5},{value:"Returns",id:"returns-7",level:5},{value:"Defined in",id:"defined-in-13",level:4},{value:"useSigma",id:"usesigma",level:3},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"useSigmaContext",id:"usesigmacontext",level:3},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-15",level:4}],c={toc:m};function k(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Main React Sigma module that contains all the standard components & hooks  to display a graph in react."),(0,i.kt)("h2",{id:"interfaces"},"Interfaces"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/react-sigma/docs/api/core/interfaces/ControlsContainerProps"},"ControlsContainerProps")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/react-sigma/docs/api/core/interfaces/EdgeEvent"},"EdgeEvent")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/react-sigma/docs/api/core/interfaces/EventHandlers"},"EventHandlers")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/react-sigma/docs/api/core/interfaces/FullScreenControlProps"},"FullScreenControlProps")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/react-sigma/docs/api/core/interfaces/MouseEvent"},"MouseEvent")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/react-sigma/docs/api/core/interfaces/NodeEvent"},"NodeEvent")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/react-sigma/docs/api/core/interfaces/SearchControlProps"},"SearchControlProps")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/react-sigma/docs/api/core/interfaces/SigmaContainerProps"},"SigmaContainerProps")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/react-sigma/docs/api/core/interfaces/SigmaContextInterface"},"SigmaContextInterface")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/react-sigma/docs/api/core/interfaces/TouchEvent"},"TouchEvent")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/react-sigma/docs/api/core/interfaces/WheelEvent"},"WheelEvent")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/react-sigma/docs/api/core/interfaces/ZoomControlProps"},"ZoomControlProps"))),(0,i.kt)("h2",{id:"component-variables"},"Component Variables"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#controlscontainer"},"ControlsContainer")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#fullscreencontrol"},"FullScreenControl")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#searchcontrol"},"SearchControl")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#sigmacontainer"},"SigmaContainer")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#zoomcontrol"},"ZoomControl"))),(0,i.kt)("h2",{id:"hook-functions"},"Hook Functions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#usecamera"},"useCamera")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#usefullscreen"},"useFullScreen")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#useloadgraph"},"useLoadGraph")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#useregisterevents"},"useRegisterEvents")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#usesetsettings"},"useSetSettings")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#usesigma"},"useSigma")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#usesigmacontext"},"useSigmaContext"))),(0,i.kt)("h2",{id:"type-aliases"},"Type aliases"),(0,i.kt)("h3",{id:"mouseedgeevent"},"MouseEdgeEvent"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"MouseEdgeEvent"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-sigma/docs/api/core/interfaces/MouseEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"MouseEvent"))," & ",(0,i.kt)("a",{parentName:"p",href:"/react-sigma/docs/api/core/interfaces/EdgeEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"EdgeEvent"))),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sim51/react-sigma/blob/b957bc8/packages/core/src/types.ts#L28"},"types.ts:28")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"mousenodeevent"},"MouseNodeEvent"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"MouseNodeEvent"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-sigma/docs/api/core/interfaces/MouseEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"MouseEvent"))," & ",(0,i.kt)("a",{parentName:"p",href:"/react-sigma/docs/api/core/interfaces/NodeEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeEvent"))),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sim51/react-sigma/blob/b957bc8/packages/core/src/types.ts#L25"},"types.ts:25")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"wheeledgeevent"},"WheelEdgeEvent"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"WheelEdgeEvent"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-sigma/docs/api/core/interfaces/WheelEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"WheelEvent"))," & ",(0,i.kt)("a",{parentName:"p",href:"/react-sigma/docs/api/core/interfaces/EdgeEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"EdgeEvent"))),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sim51/react-sigma/blob/b957bc8/packages/core/src/types.ts#L29"},"types.ts:29")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"wheelnodeevent"},"WheelNodeEvent"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"WheelNodeEvent"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-sigma/docs/api/core/interfaces/WheelEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"WheelEvent"))," & ",(0,i.kt)("a",{parentName:"p",href:"/react-sigma/docs/api/core/interfaces/NodeEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"NodeEvent"))),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sim51/react-sigma/blob/b957bc8/packages/core/src/types.ts#L26"},"types.ts:26")),(0,i.kt)("h2",{id:"component-variables-1"},"Component Variables"),(0,i.kt)("h3",{id:"controlscontainer"},"ControlsContainer"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,i.kt)("strong",{parentName:"p"},"ControlsContainer"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"React.FC"),"<",(0,i.kt)("a",{parentName:"p",href:"/react-sigma/docs/api/core/interfaces/ControlsContainerProps"},(0,i.kt)("inlineCode",{parentName:"a"},"ControlsContainerProps")),">"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"ControlsContainer")," is just a wrapper for other control components.\nIt defines their position and also their style with its CSS class ",(0,i.kt)("inlineCode",{parentName:"p"},"react-sigma-controls"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'<SigmaContainer>\n  <ControlsContainer position={"bottom-right"}>\n    <ForceAtlasControl autoRunFor={2000} />\n  </ControlsContainer>\n</SigmaContainer>\n')),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"/react-sigma/docs/api/core/interfaces/ControlsContainerProps"},"ControlsContainerProps")," for more information."),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sim51/react-sigma/blob/b957bc8/packages/core/src/components/controls/ControlsContainer.tsx#L44"},"components/controls/ControlsContainer.tsx:44")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fullscreencontrol"},"FullScreenControl"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,i.kt)("strong",{parentName:"p"},"FullScreenControl"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"React.FC"),"<",(0,i.kt)("a",{parentName:"p",href:"/react-sigma/docs/api/core/interfaces/FullScreenControlProps"},(0,i.kt)("inlineCode",{parentName:"a"},"FullScreenControlProps")),">"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"FullScreenControl")," create a UI button that allows the user to display the graph in fullscreen"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"<SigmaContainer>\n  <ControlsContainer>\n    <FullScreenControl />\n  </ControlsContainer>\n</SigmaContainer>\n")),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"/react-sigma/docs/api/core/interfaces/FullScreenControlProps"},"FullScreenControlProps")," for more information."),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sim51/react-sigma/blob/b957bc8/packages/core/src/components/controls/FullScreenControl.tsx#L56"},"components/controls/FullScreenControl.tsx:56")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"searchcontrol"},"SearchControl"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,i.kt)("strong",{parentName:"p"},"SearchControl"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"React.FC"),"<",(0,i.kt)("a",{parentName:"p",href:"/react-sigma/docs/api/core/interfaces/SearchControlProps"},(0,i.kt)("inlineCode",{parentName:"a"},"SearchControlProps")),">"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"SearchControl")," create an input text where user can search a node in the graph by its label.\nThere is an autocomplete based on includes & lower case.\nWhen a node is found, the graph will focus on the highlighted node"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"<SigmaContainer>\n  <ControlsContainer>\n    <SearchControl />\n  </ControlsContainer>\n</SigmaContainer>\n")),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"/react-sigma/docs/api/core/interfaces/SearchControlProps"},"SearchControlProps")," for more information."),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sim51/react-sigma/blob/b957bc8/packages/core/src/components/controls/SearchControl.tsx#L44"},"components/controls/SearchControl.tsx:44")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"sigmacontainer"},"SigmaContainer"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,i.kt)("strong",{parentName:"p"},"SigmaContainer"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"React.FC"),"<",(0,i.kt)("a",{parentName:"p",href:"/react-sigma/docs/api/core/interfaces/SigmaContainerProps"},(0,i.kt)("inlineCode",{parentName:"a"},"SigmaContainerProps")),">"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"SigmaContainer")," component is responsible of create the Sigma instance, and provide it to its child components using a React Context that can be accessible via the hook ",(0,i.kt)("a",{parentName:"p",href:"#usesigma"},"useSigma"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'<SigmaContainer id="sigma-graph">\n  <MyCustomGraph />\n</SigmaContainer>\n')),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"/react-sigma/docs/api/core/interfaces/SigmaContainerProps"},"SigmaContainerProps")," for more information."),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sim51/react-sigma/blob/b957bc8/packages/core/src/components/SigmaContainer.tsx#L52"},"components/SigmaContainer.tsx:52")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"zoomcontrol"},"ZoomControl"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,i.kt)("strong",{parentName:"p"},"ZoomControl"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"React.FC"),"<",(0,i.kt)("a",{parentName:"p",href:"/react-sigma/docs/api/core/interfaces/ZoomControlProps"},(0,i.kt)("inlineCode",{parentName:"a"},"ZoomControlProps")),">"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"ZoomControl")," create three UI buttons that allows the user to"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"zoom in"),(0,i.kt)("li",{parentName:"ul"},"zoom out"),(0,i.kt)("li",{parentName:"ul"},"reset zoom (ie. see the whole graph)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"<SigmaContainer>\n  <ControlsContainer>\n    <ZoomControl />\n  </ControlsContainer>\n</SigmaContainer>\n")),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"/react-sigma/docs/api/core/interfaces/ZoomControlProps"},"ZoomControlProps")," for more information."),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sim51/react-sigma/blob/b957bc8/packages/core/src/components/controls/ZoomControl.tsx#L60"},"components/controls/ZoomControl.tsx:60")),(0,i.kt)("h2",{id:"hook-functions-1"},"Hook Functions"),(0,i.kt)("h3",{id:"usecamera"},"useCamera"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"useCamera"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"options?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("p",null,"React hook that helps you to manage the camera."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const {zoomIn, zoomOut, reset, goto, gotoNode } = useCamera();\n")),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"CameraOptions"))))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"goto")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"state"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"Partial"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"CameraState"),">",", ",(0,i.kt)("inlineCode",{parentName:"td"},"options?"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"Partial"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"AnimateOptions"),">",") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"gotoNode")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"nodeKey"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"options?"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"Partial"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"AnimateOptions"),">",") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"reset")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"options?"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"Partial"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"AnimateOptions"),">",") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"zoomIn")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"options?"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"CameraOptions"),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"zoomOut")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"options?"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"CameraOptions"),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sim51/react-sigma/blob/b957bc8/packages/core/src/hooks/useCamera.ts#L19"},"hooks/useCamera.ts:19")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"usefullscreen"},"useFullScreen"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"useFullScreen"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("p",null,"React hook that helps you to set graph in fullmode."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const {toggle, isFullScreen} = useFullscreen();\n")),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"isFullScreen")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"toggle")),(0,i.kt)("td",{parentName:"tr",align:"left"},"() => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sim51/react-sigma/blob/b957bc8/packages/core/src/hooks/useFullScreen.ts#L22"},"hooks/useFullScreen.ts:22")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"useloadgraph"},"useLoadGraph"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"useLoadGraph"),"(): (",(0,i.kt)("inlineCode",{parentName:"p"},"graph"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Graph"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"clear?"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean"),") => ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"React hook that helps you to load a graph.\nIf a graph was previously loaded in Sigma/Graphology, per default it is cleared.\nYou can change this behaviour by settings the parameter ",(0,i.kt)("inlineCode",{parentName:"p"},"clear")," to false."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const loadGraph = useLoadGraph();\nloadGraph(erdosRenyi(UndirectedGraph, { order: 100, probability: 0.2 }), true);\n")),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fn")),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"graph"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"clear?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"React hook that helps you to load a graph.\nIf a graph was previously loaded in Sigma/Graphology, per default it is cleared.\nYou can change this behaviour by settings the parameter ",(0,i.kt)("inlineCode",{parentName:"p"},"clear")," to false."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const loadGraph = useLoadGraph();\nloadGraph(erdosRenyi(UndirectedGraph, { order: 100, probability: 0.2 }), true);\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"category"))," Hook"),(0,i.kt)("h5",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"graph")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Graph"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"clear?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean"))))),(0,i.kt)("h5",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sim51/react-sigma/blob/b957bc8/packages/core/src/hooks/useLoadGraph.ts#L17"},"hooks/useLoadGraph.ts:17")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"useregisterevents"},"useRegisterEvents"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"useRegisterEvents"),"(): (",(0,i.kt)("inlineCode",{parentName:"p"},"eventHandlers"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Partial"),"<",(0,i.kt)("a",{parentName:"p",href:"/react-sigma/docs/api/core/interfaces/EventHandlers"},(0,i.kt)("inlineCode",{parentName:"a"},"EventHandlers")),">",") => ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"React hook that helps you to listen Sigma\u2019s events.\nIt handles for you all the lifecyle of listener (ie. on / remove)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const registerEvents = useRegisterEvents();\nregisterEvents({\n enterNode: event => setHoveredNode(event.node),\n leaveNode: event => setHoveredNode(null),\n});\n")),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fn")),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"eventHandlers"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"React hook that helps you to listen Sigma\u2019s events.\nIt handles for you all the lifecyle of listener (ie. on / remove)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const registerEvents = useRegisterEvents();\nregisterEvents({\n enterNode: event => setHoveredNode(event.node),\n leaveNode: event => setHoveredNode(null),\n});\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"category"))," Hook"),(0,i.kt)("h5",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"eventHandlers")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Partial"),"<",(0,i.kt)("a",{parentName:"td",href:"/react-sigma/docs/api/core/interfaces/EventHandlers"},(0,i.kt)("inlineCode",{parentName:"a"},"EventHandlers")),">")))),(0,i.kt)("h5",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sim51/react-sigma/blob/b957bc8/packages/core/src/hooks/useRegisterEvents.ts#L57"},"hooks/useRegisterEvents.ts:57")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"usesetsettings"},"useSetSettings"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"useSetSettings"),"(): (",(0,i.kt)("inlineCode",{parentName:"p"},"newSettings"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Partial"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Settings"),">",") => ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"React hook that helps you to update Sigma\u2019s settings."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const setSettings = useSetSettings();\nsetSettings({\n hideEdgesOnMove: true,\n hideLabelsOnMove: true,\n});\n")),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fn")),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"newSettings"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"React hook that helps you to update Sigma\u2019s settings."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const setSettings = useSetSettings();\nsetSettings({\n hideEdgesOnMove: true,\n hideLabelsOnMove: true,\n});\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"category"))," Hook"),(0,i.kt)("h5",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"newSettings")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Partial"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Settings"),">")))),(0,i.kt)("h5",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sim51/react-sigma/blob/b957bc8/packages/core/src/hooks/useSetSettings.ts#L18"},"hooks/useSetSettings.ts:18")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"usesigma"},"useSigma"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"useSigma"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Sigma")),(0,i.kt)("p",null,"React hook to retrieve the sigma instance (from the context)."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const sigma = useSigma();\n")),(0,i.kt)("h4",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Sigma")),(0,i.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sim51/react-sigma/blob/b957bc8/packages/core/src/hooks/useSigma.ts#L13"},"hooks/useSigma.ts:13")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"usesigmacontext"},"useSigmaContext"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"useSigmaContext"),"(): ",(0,i.kt)("a",{parentName:"p",href:"/react-sigma/docs/api/core/interfaces/SigmaContextInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"SigmaContextInterface"))),(0,i.kt)("p",null,"React hook that store the sigma and html container reference."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const {sigma, container} = useSigmaContext();\n")),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"/react-sigma/docs/api/core/interfaces/SigmaContextInterface"},"SigmaContextInterface")," for more information."),(0,i.kt)("h4",{id:"returns-9"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/react-sigma/docs/api/core/interfaces/SigmaContextInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"SigmaContextInterface"))),(0,i.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sim51/react-sigma/blob/b957bc8/packages/core/src/hooks/context.ts#L29"},"hooks/context.ts:29")))}k.isMDXComponent=!0}}]);