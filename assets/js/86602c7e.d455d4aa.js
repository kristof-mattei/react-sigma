(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[737],{8158:(e,t,n)=>{"use strict";n.d(t,{G:()=>r,Z:()=>a});var o=n(7294),l=n(814);const r=e=>{let{code:t,title:n,children:r,mode:a="code"}=e;const[i,s]=(0,o.useState)(a);return o.createElement("div",{className:"code-preview"},o.createElement("div",{className:"header"},o.createElement("div",null,n&&o.createElement("h5",null,n)),o.createElement("div",{className:"switch"},o.createElement("button",{className:"button",onClick:()=>s("code"),disabled:"code"===i},"Code"),o.createElement("button",{className:"button",onClick:()=>s("preview"),disabled:"preview"===i},"Preview"))),o.createElement("div",{className:"content"},"preview"===i&&r,"code"===i&&o.createElement(l.Z,{language:"jsx"},t)))},a=r},8370:(e,t,n)=>{"use strict";n.d(t,{a:()=>c});var o=n(7294),l=n(2698),r=n.n(l),a=n(8925),i=n(1154),s=n(5506);const c=e=>{let{order:t,probability:n}=e;const{faker:l,randomColor:c}=(0,s.g)(),m=(0,a.Ys)(),{assign:u}=(0,i.f)(),d=(0,a.$j)(),p=(0,a.sG)(),h=(0,a.eP)(),[C,f]=(0,o.useState)(null);return(0,o.useEffect)((()=>{const e=new(r());for(let n=0;n<t;n++)e.addNode(n,{label:l.name.fullName(),size:l.datatype.number({min:4,max:20,precision:1}),color:c(),x:0,y:0});for(let o=0;o<t;o++)for(let l=o+1;l<t;l++)Math.random()<n&&e.addDirectedEdge(o,l),Math.random()<n&&e.addDirectedEdge(l,o);p(e),u(),d({enterNode:e=>f(e.node),leaveNode:()=>f(null)})}),[u,p,d,l.datatype,l.name,c,t,n]),(0,o.useEffect)((()=>{h({nodeReducer:(e,t)=>{const n=m.getGraph(),o={...t,highlighted:t.highlighted||!1};return C&&(e===C||n.neighbors(C).includes(e)?o.highlighted=!0:(o.color="#E2E2E2",o.highlighted=!1)),o},edgeReducer:(e,t)=>{const n=m.getGraph(),o={...t,hidden:!1};return C&&!n.extremities(e).includes(C)&&(o.hidden=!0),o}})}),[C,h,m]),null}},5506:(e,t,n)=>{"use strict";n.d(t,{g:()=>i});var o=n(7294),l=n(6377),r=n.n(l),a=n(2779);const i=()=>{const e=new URLSearchParams(window.location.search).get("seed");(0,o.useEffect)((()=>{e&&(r()(e,{global:!0}),a.We.seed(Math.random()))}),[e]);const t=(0,o.useMemo)((()=>()=>{let e="#";for(let t=0;t<6;t++)e+="0123456789abcdef".charAt(Math.floor(16*Math.random()));return e}),[]);return{faker:a.We,randomColor:t}}},9662:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>C,default:()=>y,frontMatter:()=>h,metadata:()=>f,toc:()=>k});var o=n(7462),l=n(7294),r=n(3905),a=n(8158),i=n(8925),s=n(8289),c=n(8370);const m=()=>l.createElement(i.C6,{style:{height:"500px"}},l.createElement(c.a,{order:100,probability:.1}),l.createElement(i.k2,{position:"bottom-right"},l.createElement(i.Ly,null),l.createElement(i.o5,null),l.createElement(s.UZ,{settings:{settings:{slowDown:10}}})),l.createElement(i.k2,{position:"top-right"},l.createElement(i.lD,{style:{width:"200px"}})));var u=n(8193),d=n(5434);const p=()=>l.createElement(i.C6,{style:{height:"500px"}},l.createElement(c.a,{order:100,probability:.01}),l.createElement(i.k2,{position:"bottom-right"},l.createElement(i.Ly,null,l.createElement(u.SxL,null),l.createElement(u.aAQ,null),l.createElement(d.Pb6,null)),l.createElement(i.o5,null,l.createElement(u.vju,null),l.createElement(u.sz8,null)),l.createElement(s.UZ,{autoRunFor:500},l.createElement(u.sT9,null),l.createElement(u.civ,null)))),h={},C="Controls",f={unversionedId:"example/controls",id:"example/controls",title:"Controls",description:"The library comes with a system of controls,",source:"@site/docs/example/05_controls.mdx",sourceDirName:"example",slug:"/example/controls",permalink:"/react-sigma/docs/example/controls",draft:!1,editUrl:"https://github.com/sim51/react-sigma/tree/main/packages/website/docs/example/05_controls.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"docs",previous:{title:"Layouts",permalink:"/react-sigma/docs/example/layouts"},next:{title:"External State",permalink:"/react-sigma/docs/example/external_state"}},g={},k=[{value:"List of controls",id:"list-of-controls",level:2},{value:"ControlContainer",id:"controlcontainer",level:2},{value:"Custom render for controls",id:"custom-render-for-controls",level:2},{value:"Custom labels for I18N",id:"custom-labels-for-i18n",level:2}],b={toc:k};function y(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"controls"},"Controls"),(0,r.kt)("p",null,"The library comes with a system of controls,\nthat helps you to control / interact with the graph, out of the box."),(0,r.kt)("h2",{id:"list-of-controls"},"List of controls"),(0,r.kt)("p",null,"This is the list of available controls :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Fullscreen button"),(0,r.kt)("li",{parentName:"ul"},"Search control"),(0,r.kt)("li",{parentName:"ul"},"Zoom control (in, out & reset)")),(0,r.kt)("h2",{id:"controlcontainer"},"ControlContainer"),(0,r.kt)("p",null,"A ",(0,r.kt)("em",{parentName:"p"},"control")," component must be include into a ",(0,r.kt)("inlineCode",{parentName:"p"},"ControlContainer")," component.\nThis component takes a property called ",(0,r.kt)("inlineCode",{parentName:"p"},"position")," which determinate where the controls will be displayed.\nValues are : ",(0,r.kt)("inlineCode",{parentName:"p"},"top-right"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"top-left"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"bottom-right"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"bottom-left")," ;"),(0,r.kt)(a.G,{code:'import React, { FC } from "react";\n\nimport "@react-sigma/core/lib/react-sigma.min.css";\nimport {\n  SigmaContainer,\n  ControlsContainer,\n  ZoomControl,\n  SearchControl,\n  FullScreenControl,\n  useSigma,\n} from "@react-sigma/core";\nimport { LayoutForceAtlas2Control } from "@react-sigma/layout-forceatlas2";\n\nimport { GraphDefault } from "../GraphDefault";\n\nconst ControlContainer: FC = () => {\n  return (\n    <SigmaContainer style={{ height: "500px" }}>\n      <GraphDefault order={100} probability={0.1} />\n      <ControlsContainer position={"bottom-right"}>\n        <ZoomControl />\n        <FullScreenControl />\n        <LayoutForceAtlas2Control settings={{ settings: { slowDown: 10 } }} />\n      </ControlsContainer>\n      <ControlsContainer position={"top-right"}>\n        <SearchControl style={{ width: "200px" }} />\n      </ControlsContainer>\n    </SigmaContainer>\n  );\n};\n\nexport default ControlContainer;\n',title:"Control container example",mdxType:"CodePreview"},(0,r.kt)(m,{mdxType:"ControlContainer"})),(0,r.kt)("h2",{id:"custom-render-for-controls"},"Custom render for controls"),(0,r.kt)("p",null,"Controls have pre-defined style and icon, but you can define your own one, by specifying children component."),(0,r.kt)("p",null,"On the ",(0,r.kt)("inlineCode",{parentName:"p"},"FullScreenControl"),' you must defined two children,\nthe first one will be the JSX element for the "enter fullscreen"\nand the second for the "exit fullscreen".'),(0,r.kt)("p",null,"On the ",(0,r.kt)("inlineCode",{parentName:"p"},"ZoomControl")," you must defined three children :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"zoom in"),(0,r.kt)("li",{parentName:"ul"},"zoom out"),(0,r.kt)("li",{parentName:"ul"},"zoom reset")),(0,r.kt)("p",null,"On the Worker layout you must defined two children :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"stop"),(0,r.kt)("li",{parentName:"ul"},"start")),(0,r.kt)(a.G,{code:'import React, { FC } from "react";\nimport {\n  AiOutlineZoomIn,\n  AiOutlineZoomOut,\n  AiOutlineFullscreenExit,\n  AiOutlineFullscreen,\n  AiFillPlayCircle,\n  AiFillPauseCircle,\n} from "react-icons/ai";\nimport { MdFilterCenterFocus } from "react-icons/md";\n\nimport { SigmaContainer, ControlsContainer, ZoomControl, FullScreenControl } from "@react-sigma/core";\nimport { LayoutForceAtlas2Control } from "@react-sigma/layout-forceatlas2";\n\nimport { GraphDefault } from "../GraphDefault";\n\nconst ControlCustom: FC = () => {\n  return (\n    <SigmaContainer style={{ height: "500px" }}>\n      <GraphDefault order={100} probability={0.01} />\n      <ControlsContainer position={"bottom-right"}>\n        <ZoomControl>\n          <AiOutlineZoomIn />\n          <AiOutlineZoomOut />\n          <MdFilterCenterFocus />\n        </ZoomControl>\n        <FullScreenControl>\n          <AiOutlineFullscreen />\n          <AiOutlineFullscreenExit />\n        </FullScreenControl>\n        <LayoutForceAtlas2Control autoRunFor={500}>\n          <AiFillPlayCircle />\n          <AiFillPauseCircle />\n        </LayoutForceAtlas2Control>\n      </ControlsContainer>\n    </SigmaContainer>\n  );\n};\n\nexport default ControlCustom;\n',title:"Custom render for control",mdxType:"CodePreview"},(0,r.kt)(p,{mdxType:"ControlCustom"})),(0,r.kt)("h2",{id:"custom-labels-for-i18n"},"Custom labels for I18N"),(0,r.kt)("p",null,"Every component that display a label in a way accepts a property called ",(0,r.kt)("inlineCode",{parentName:"p"},"labels"),",\nwhich is a map of key/value."),(0,r.kt)("p",null,"For example, you can change the labels of the zoom control like that :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'<ZoomControl labels={{ zoomIn: "PLUS", zoomOut: "MINUS", reset: "RESET" }} />\n')))}y.isMDXComponent=!0},5042:()=>{}}]);